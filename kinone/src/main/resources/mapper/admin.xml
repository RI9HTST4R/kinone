<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminmapper">
    
<!-- #####################################한동준############################################### -->    

    <select id="allLeague" resultType="java.lang.String">
    	select * from league order by lcode
    </select>
    
    <select id="topLeague" resultType="java.lang.String">
    	select min(lcode) from league
    </select>
    
    <select id="allSeason" resultType="java.lang.String">
    	select * from season order by seasoncode desc
    </select>
    
    <select id="topSeason" resultType="java.lang.String">
    	select max(seasoncode) from season
    </select>
    
    <select id="checkClub" parameterType="java.util.List" resultType="java.lang.Integer">
    	select count(*) from club where ccode in 
    	<foreach collection="list" item="ccode" open="(" close=")" separator=",">
    	#{ccode}
    	</foreach>
    </select>
    
    <insert id="insertMatch" parameterType="java.util.List">
		<foreach collection="list" item="match" open="INSERT ALL " separator=" " close=" SELECT * FROM DUAL" > 
         into match values (#{match.mcode}, #{match.lcode}, #{match.mdate}, #{match.mround}, 0, #{match.ccode_home}, #{match.ccode_away}, null, null)
         into match_detail values (#{match.mcode}, null, null)
        </foreach>
	</insert>
    
    <insert id="changeMdate" parameterType="java.util.HashMap">
    	update match set mdate = #{mdate} where mcode = #{mcode}
    </insert>
    
    <delete id="deleteMatch" parameterType="java.lang.String">
    	delete from match where mcode = #{mcode}
    </delete>
    
    <select id="allMatchList" resultType="match">
    	select * from
		(select rownum rnum, V.* from
		(select M.*, Ch.cname_short cname_short_h, Ca.cname_short cname_short_a
		from match M, club Ch, club Ca
		where M.ccode_home = Ch.ccode and M.ccode_away = Ca.ccode
		order by M.mdate desc, mround desc) V)
		where rnum <![CDATA[<]]>= 200
    </select>
    
    <select id="mcodeDuplCheck" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    	select count(*) from match where mcode = #{cmcode} and mdate = #{cmdate}
    </select>
    
    <select id="searchMatchList" parameterType="java.util.HashMap" resultType="match">
    	select * from (
		select rownum rnum, V.* from (
		select M.*, 
		<if test='seasoncode != null and seasoncode !=""'>to_char(M.mdate,'yyyy') seasoncode,</if>
		Ch.cname_short cname_short_h, Ca.cname_short cname_short_a
		from match M, club Ch, club Ca
		<where>
			M.ccode_home = Ch.ccode and M.ccode_away = Ca.ccode
			<if test='lcode != null and lcode !=""'>and lcode = #{lcode}</if>
			<if test='keyword != null and keyword != ""'>
				<if test='category == "mcode"'>and M.mcode like '%'||upper(#{keyword})||'%'</if>
				<if test='category == "ccode"'>and (M.ccode_home like '%'||upper(#{keyword})||'%' or M.ccode_away like '%'||upper(#{keyword})||'%')</if>
				<if test='category == "cname_short"'>and (Ch.cname_short like '%'||upper(#{keyword})||'%' or Ca.cname_short like '%'||upper(#{keyword})||'%')</if>
				<if test='category == "mround"'>and M.mround = #{keyword}</if>
				<if test='category == "mstatus"'>and M.mstatus = #{keyword}</if>
			</if>
		</where>
		order by M.mdate asc, mround asc) V
		<where>
			<if test='seasoncode != null and seasoncode !=""'>seasoncode = #{seasoncode}</if>
		</where>
		)
		where rnum <![CDATA[>]]>= 1 and rnum <![CDATA[<]]>= 100 
		
    </select>
<!-- ############################################################################################# -->    


<!-- ########################################김동환########################################## -->    

	<!-- 관리자 구단 생성 -->
	<insert id="mngInsertClub">
		<selectKey resultType="String" keyProperty="ccode"
			order="BEFORE">
			select 'K' || to_char(max(to_number(substr(ccode,2)))+1) from club
		</selectKey>
		insert into club(ccode, cname, cname_short, emblem, cmanager, isbeing)
		values (#{ccode}, #{cname}, #{cname_short}, #{emblem}, #{cmanager}, 1)
	</insert>

	<!-- 관리자 구단 경기장 생성 -->
	<insert id="mngInsertStadium" parameterType="club">
		<selectKey resultType="String" keyProperty="ccode"
			order="BEFORE">
			select 'K' || to_char(max(to_number(substr(ccode,2)))) from club
		</selectKey>
		insert into stadium (ccode, sname, sphoto, capacity)
		values (#{ccode}, #{sname}, #{sphoto}, #{capacity})
	</insert>

	<select id="mngClubCont" parameterType="String"
		resultType="club">
		select * from club where cname = #{cname}
	</select>

	<!-- 관리자 구단 삭제 -->
	<update id="mngDeleteClub" parameterType="String">
		update club set isbeing = 0 where cname = #{cname}
	</update>

	<!-- 관리자 경기장 삭제 -->
	<delete id="mngDeleteStadium" parameterType="String">
		delete from stadium where ccode = #{ccode}
	</delete>

	<!-- 상세정보 -->
	<select id="mngClubDetail" resultType="club" parameterType="String">
		select c.ccode, c.cname, c.cname_short, c.cmanager, c.emblem, s.sname, s.sphoto, s.capacity
		from club c, stadium s 
		where c.ccode = #{ccode} and c.ccode = s.ccode
	</select>
	
	 <!-- 관리자 클럽 수정 -->	
	 	<!-- 관리자 구단 수정 -->
		<update id="mngUpdateClub" parameterType="club">
			update club 
			set cname=#{cname}, cname_short=#{cname_short}, emblem=#{emblem}, cmanager=#{cmanager}
			where ccode = #{ccode}
		</update>
		
		<!-- 관리자 경기장 수정 -->
		<update id="mngUpdateStadium" parameterType="club">
			update stadium 
			set sname = #{sname}, sphoto = #{sphoto}, capacity = #{capacity}
			where ccode = #{ccode}
		</update>
		
<!-- ############################################################################################# -->    
		
</mapper>








