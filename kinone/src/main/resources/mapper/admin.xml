<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminmapper">
    
<!-- #####################################한동준############################################### -->    
	
	<insert id="addSeason" parameterType="java.lang.String">
		insert into season values(#{seasoncode})
	</insert>
	
    <select id="allLeague" resultType="java.lang.String">
    	select * from league order by lcode
    </select>
    
    <select id="topLeague" resultType="java.lang.String">
    	select min(lcode) from league
    </select>
    
    <select id="allSeason" resultType="java.lang.String">
    	select * from season order by seasoncode desc
    </select>
    
    <select id="topSeason" resultType="java.lang.String">
    	select max(seasoncode) from season
    </select>
    
    <select id="checkClub" parameterType="java.util.List" resultType="java.lang.Integer">
    	select count(*) from club where ccode in 
    	<foreach collection="list" item="ccode" open="(" close=")" separator=",">
    	#{ccode}
    	</foreach>
    </select>
    
    <insert id="insertMatch" parameterType="java.util.List">
		<foreach collection="list" item="match" open="INSERT ALL " separator=" " close=" SELECT * FROM DUAL" > 
         into match values (#{match.mcode}, #{match.lcode}, #{match.mdate}, #{match.mround}, 0, #{match.ccode_home}, #{match.ccode_away}, null, null)
         into match_detail values (#{match.mcode}, null, null)
        </foreach>
	</insert>
    
    <update id="changeMdate" parameterType="java.util.HashMap">
    	update match set mdate = #{mdate} where mcode = #{mcode}
    </update>
    
    
    
    <delete id="deleteMatch" parameterType="java.lang.String">
    	delete from match where mcode = #{mcode}
    </delete>
    
    <select id="mcodeDuplCheck" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    	select count(*) from match where mcode = #{cmcode} and mdate = #{cmdate}
    </select>
        
    <select id="matchListCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    	select count(*) from (
		select M.*, 
		<if test='seasoncode != null and seasoncode !=""'>to_char(M.mdate,'yyyy') seasoncode,</if>
		Ch.cname_short cname_short_h, Ca.cname_short cname_short_a
		from match M, club Ch, club Ca
		<where>
			M.ccode_home = Ch.ccode and M.ccode_away = Ca.ccode
			<if test='lcode != null and lcode !=""'>and lcode = #{lcode}</if>
			<if test='keyword != null and keyword != ""'>
				<if test='category == "mcode"'>and M.mcode like '%'||upper(#{keyword})||'%'</if>
				<if test='category == "ccode"'>and (M.ccode_home like '%'||upper(#{keyword})||'%' or M.ccode_away like '%'||upper(#{keyword})||'%')</if>
				<if test='category == "cname_short"'>and (Ch.cname_short like '%'||upper(#{keyword})||'%' or Ca.cname_short like '%'||upper(#{keyword})||'%')</if>
				<if test='category == "mround"'>and M.mround = #{keyword}</if>
				<if test='category == "mstatus"'>and M.mstatus = #{keyword}</if>
			</if>
		</where>
		) V
		<where>
			<if test='seasoncode != null and seasoncode !=""'>seasoncode = #{seasoncode}</if>
		</where>
    </select>

    <select id="searchMatchList" parameterType="java.util.HashMap" resultType="match">
    	select * from (
		select rownum rnum, V.* from (
		select M.*, 
		<if test='seasoncode != null and seasoncode !=""'>to_char(M.mdate,'yyyy') seasoncode,</if>
		Ch.cname_short cname_short_h, Ca.cname_short cname_short_a
		from match M, club Ch, club Ca
		<where>
			M.ccode_home = Ch.ccode and M.ccode_away = Ca.ccode
			<if test='lcode != null and lcode !=""'>and lcode = #{lcode}</if>
			<if test='keyword != null and keyword != ""'>
				<if test='category == "mcode"'>and M.mcode like '%'||upper(#{keyword})||'%'</if>
				<if test='category == "ccode"'>and (M.ccode_home like '%'||upper(#{keyword})||'%' or M.ccode_away like '%'||upper(#{keyword})||'%')</if>
				<if test='category == "cname_short"'>and (Ch.cname_short like '%'||upper(#{keyword})||'%' or Ca.cname_short like '%'||upper(#{keyword})||'%')</if>
				<if test='category == "mround"'>and M.mround = #{keyword}</if>
				<if test='category == "mstatus"'>and M.mstatus = #{keyword}</if>
			</if>
		</where>
		order by M.mdate desc, M.mround desc, M.ccode_home desc, M.ccode_away desc) V
		<where>
			<if test='seasoncode != null and seasoncode !=""'>seasoncode = #{seasoncode}</if>
		</where>
		)
		where rnum <![CDATA[>]]>= #{startRow} and rnum <![CDATA[<]]>= #{endRow}
    </select>
    
    <update id="updateMatchDetail" parameterType="match_detail">
    	update match_detail set homelineup = #{homelineup, jdbcType=VARCHAR}, awaylineup = #{awaylineup, jdbcType=VARCHAR}
    	where mcode = #{mcode}
    </update>
    
    <update id="updateMatchStatScore" parameterType="match">
    	update match set mstatus = 1, homescore = #{homescore}, awayscore = #{awayscore} where mcode = #{mcode}
    </update>
    
    <update id="updateSeasonGrade" parameterType="club_season">
    	update club_season set win = win + #{win}, draw = draw + #{draw}, lose = lose + #{lose},
    						   c_ggoal = c_ggoal + #{c_ggoal}, c_lgoal = c_lgoal + #{c_lgoal}
    	where ccode = #{ccode} and seasoncode = #{seasoncode} and lcode = #{lcode}
    </update>
<!-- ############################################################################################# -->    


<!-- ########################################김동환########################################## -->    

	<!-- 관리자 구단 생성 -->
	<insert id="mngInsertClub">
		<selectKey resultType="String" keyProperty="ccode"
			order="BEFORE">
			select 'K' || to_char(max(to_number(substr(ccode,2)))+1) from club
		</selectKey>
		insert into club(ccode, cname, cname_short, emblem, cmanager, isbeing)
		values (#{ccode}, #{cname}, #{cname_short}, #{emblem, jdbcType=VARCHAR}, #{cmanager}, 1)
	</insert>

	<!-- 관리자 구단 경기장 생성 -->
	<insert id="mngInsertStadium" parameterType="club">
		<selectKey resultType="String" keyProperty="ccode"
			order="BEFORE">
			select 'K' || to_char(max(to_number(substr(ccode,2)))) from club
		</selectKey>
		insert into stadium (ccode, sname, sphoto, capacity)
		values (#{ccode}, #{sname}, #{sphoto, jdbcType=VARCHAR}, #{capacity})
	</insert>

	<select id="mngClubCont" parameterType="String"
		resultType="club">
		select * from club where ccode = #{ccode}
	</select>

	<!-- 관리자 구단 삭제 -->
	<update id="mngDeleteClub" parameterType="String">
		update club set isbeing = 0 where ccode = #{ccode}
	</update>

	<!-- 관리자 경기장 삭제 -->
	<delete id="mngDeleteStadium" parameterType="String">
		delete from stadium where ccode = #{ccode}
	</delete>

	<!-- 상세정보 -->
	<select id="mngClubDetail" resultType="club" parameterType="String">
		select c.ccode, c.cname, c.cname_short, c.cmanager, c.emblem, c.intro, s.sname, s.sphoto, s.capacity
		from club c, stadium s 
		where c.ccode = #{ccode} and c.ccode = s.ccode
	</select>
	
	 <!-- 관리자 클럽 수정 -->	
 	<!-- 관리자 구단 수정 -->
	<update id="mngUpdateClub" parameterType="club">
		update club 
		set cname=#{cname}, cname_short=#{cname_short}, emblem=#{emblem, jdbcType=VARCHAR}, cmanager=#{cmanager}
		where ccode = #{ccode}
	</update>
	
	<!-- 관리자 경기장 수정 -->
	<update id="mngUpdateStadium" parameterType="club">
		update stadium 
		set sname = #{sname}, sphoto = #{sphoto, jdbcType=VARCHAR}, capacity = #{capacity}
		where ccode = #{ccode}
	</update>
		
<!-- ############################################################################################# -->    
		
<!-- #####################################심규진############################################### --> 
   
    <!-- 관리자 선수 리스트 -->
	<select id="plist" parameterType="player"  resultType="player">
	select * from (select a.*,rowNum rn from (select * from player 
			<if test="teamcode != null">
				where ccode =#{teamcode}
			</if>
			<if test="sposition != null">
				where position = #{sposition}
			</if>
			<if test="keyword != null">
				where pname like '%'||#{keyword}||'%'
			</if>order by pcode)a ) where (rn between #{startRow} and #{endRow})
			
		
	</select>
	
	<!-- 관리자 선수 리스트 총인원수 -->
	<select id="getPtotal" parameterType="player" resultType="int">
		select count(*) from player
			<if test="teamcode != null">
				where ccode =#{teamcode}
			</if>
			<if test="sposition != null">
				where position = #{sposition}
			</if>
			<if test="keyword != null">
				where pname like '%'||#{keyword}||'%'
			</if>
	</select>
	
	<!-- 관리자 선수 뷰 일반 -->
	<select id="pselect" parameterType="String" resultType="player">
		select * from player where pcode=#{pcode}
	</select>
	
	<!-- 관리자 선수 뷰 디테일 -->
	<select id="pselectd" parameterType="String" resultType="player_detail">
		select * from player_detail where pcode=#{pcode}
	</select>
	
	<!-- 관리자 선수 뷰 시즌 -->
	<select id="pselects" parameterType="String" resultType="player_season">
		select * from player_season where pcode=#{pcode} order by seasoncode desc
	</select>
	
	<!-- 관리자 선수 업데이트 -->
	<update id="pupdate" parameterType="player">
		update player set ccode=#{ccode}, pno=#{pno},
		pname=#{pname},position=#{position},photo=#{photo, jdbcType=VARCHAR} 
		where pcode=#{pcode}
	</update>
	
	<!-- 관리자 선수 업데이트 디테일-->
	<update id="pupdated" parameterType="player_detail">
		update player_detail set nation=#{nation}, birthdate=#{birthdate},
		height=#{height},weight=#{weight} where pcode=#{pcode}
	</update>
	
	<!-- 관리자 선수 업데이트 시즌-->
	<update id="pupdates" parameterType="player_season">
		update player_season set ccode=#{ccode}, gamecount=#{gamecount},
		p_lgoal=#{p_lgoal},p_ggoal=#{p_ggoal},p_assist=#{p_assist}
		where pcode=#{pcode} and seasoncode=#{seasoncode}
	</update>
	
	<!-- 관리자 선수 업데이트시 삽입 시즌 -->
	<insert  id="puinsert" parameterType="player_season">
		insert into  player_season values ((select NVL(MAX(inputno)+1,1) from player_season), 
		#{pcode}, #{seasoncode}, #{ccode}, #{gamecount}, #{p_lgoal}, #{p_ggoal}, #{p_assist})
		
	</insert>
	
	<!-- 관리자 선수 삽입 -->
	<insert id="pinsert" parameterType="player">
		<selectKey resultType="String" keyProperty="pcode" order="BEFORE">
		<![CDATA[select  case when (max(to_number(substr(pcode,2)))+1 < 1000) then 'P0' || to_char(max(to_number(substr(pcode,2)))+1)
	            when (max(to_number(substr(pcode,2)))+1 >= 1000) then 'P' || to_char(max(to_number(substr(pcode,2)))+1) end pcode from player]]>
		</selectKey>
		insert into player values(#{pcode},#{ccode},#{pno},#{pname},
		#{position},#{photo, jdbcType=VARCHAR} )
	</insert>
	
	<!-- 관리자 선수 삽입 디테일 -->
	<insert id="pinsertd" parameterType="player_detail">
		<selectKey resultType="String" keyProperty="pcode" order="BEFORE">
			<![CDATA[select  case when (max(to_number(substr(pcode,2)))+1 < 1000) then 'P0' || to_char(max(to_number(substr(pcode,2)))+1)
	            when (max(to_number(substr(pcode,2)))+1 >= 1000) then 'P' || to_char(max(to_number(substr(pcode,2)))+1) end pcode from player_detail]]>
	</selectKey>
		insert into player_detail values(#{pcode},#{nation},
		#{birthdate, jdbcType=VARCHAR},#{height},#{weight})
	</insert>
	
	<!-- 관리자 선수 삽입 시즌-->
	<insert  id="pinserts" parameterType="player_season">
		<selectKey resultType="String" keyProperty="pcode" order="BEFORE">
			<![CDATA[select  case when (max(to_number(substr(pcode,2)))+1 < 1000) then 'P0' || to_char(max(to_number(substr(pcode,2)))+1)
	            when (max(to_number(substr(pcode,2)))+1 >= 1000) then 'P' || to_char(max(to_number(substr(pcode,2)))+1) end pcode from PLAYER_SEASON]]>
	</selectKey>
		insert into  player_season values ((select NVL(MAX(inputno)+1,1) from player_season)  ,#{pcode},'2018',#{ccode},0,0,0,0 )
	</insert>
	
	<!-- 관리자 선수 삭제 -->
	<update id="pdelete" parameterType="String">
		delete from player where pcode=#{pcode}
	</update>
	
	<!-- 관리자 선수 삭제 디테일 -->
	<update id="pdeleted" parameterType="String">
		delete from player_detail where pcode=#{pcode}
	</update>
	
	<!-- 관리자 선수 삭제 시즌 -->
	<update id="pdeletes" parameterType="String">
		delete from player_season where pcode=#{pcode}
	</update>
    
    <!-- #################################################################################### -->
    <!-- #####################################김현준 게시판################################### -->
    
    <insert id="board_insert" parameterType="board">
    	<selectKey order="BEFORE" keyProperty="bno" resultType="int">
    		select NVL(MAX(bno),0)+1 from board
    	</selectKey>
    	insert into board (BNO,SUBJECT,IMAGE,CONTENT,REGIDATE,READCOUNT) values(#{bno},#{subject},#{image},#{content},#{regidate},0)
    </insert>
    <select id="getBoardList" parameterType="int" resultType="board">
	    <![CDATA[
		select * from 
		 (select rownum rnum, a.* from  
	  	 (select * from board order by regidate desc) a) 
	   		 where rnum >= ((#{page}-1) * 10+1)  and rnum <= (#{page} * 10)
		]]>
	</select>
    <select id="getBoardListCount" resultType="int">
    select count(*) from board
    </select>
	<select id="getBoard" parameterType="int" resultType="board" >
    select * from board where bno = #{bno}
    </select>
     <select id="getRecentNews" resultType="board">
		select * from (select * from board order by bno desc) where rownum <![CDATA[ < ]]> 5	
	</select>
	<update id="addReadCount" parameterType="int">
		update board set readcount = readcount+1 where bno = #{bno}
	</update>
	<update id="delBoard" parameterType="int">
		delete from board where bno=#{bno}
	</update>
	<update id="board_edit_update" parameterType="board">
		update board set subject= #{subject}, image=#{image}, content = #{content}  where bno = #{bno}
	</update>
	
	<update id="club_intro_insert" parameterType="map">
	update club set intro=#{intro} where ccode = #{ccode}
	</update>
	
</mapper>








