<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- Data Source -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@orcl.cgy1jnnavj5w.ap-northeast-2.rds.amazonaws.com:1521:orcl" />
		<property name="username" value="master" />
		<property name="password" value="oracle123" />
	</bean>
	
	<!-- 스프링 jdbc 즉 스프링으로 oracle 디비 연결 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:util/SqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean><!-- mybatis ORM DB 연동 프레임웍 연결 -->
	
	
	<!-- 트랜잭션 매니저 설정(트랜잭션 처리를 위한 객체를 생성) -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

    	
	<!-- Transaction 기본 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<tx:method name="*" propagation="REQUIRED"/>
		<!-- name속성값을 *로 지정하면 모든 메서드에 적용 즉 어떠한 메서드를 사용해도 된다. 
		      트랜잭션 속성 REQUIRED 를 적용. 
			 현재 진행중인 트랜잭션이 존재하면, 해당 트랜잭션을 사용하고 존재하지 
                 않는다면 새로운 트랜잭션을 생성
 		-->
		<tx:method name="get*" read-only="true"/>
		<!-- get 으로 시작하는 모든 메서드를 받아들인다. 그리고 단지 읽기 속성을 하기	위해서 true로 설정 -->
		</tx:attributes>
	</tx:advice>
	
	<!-- AOP 설정을 사용해서 Transaction 적용 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* service.*Service.*(..))"/>
		<!-- service 패키지의 Service 포함하는 모든 클래스,인터페이스의 모든 메서드를 포인트 컷 한다. -->
	</aop:config>
	
</beans>

